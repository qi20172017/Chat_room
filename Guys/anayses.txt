聊天室思路分析

1. 需求的整理 ： 达到什么效果，如何工作

2. 技术点的分析

   * 通信套接字
     udp通信

   * 数据流方向

     c --> s
     客户端 请求 ---> 服务端处理
     信息   客户端--》 服务端 -->其他客户端

   * 服务端需要存储用户什么信息，怎么存
     用户名  地址
     [(name,address),(name,address)...]
     {name:address,}
     class Person:
        def __init__(self,name,address):
            self.name = name
            self.address = address

   * 收发消息

     收消息和发消息使用不同的进程

3. 结构设计和协议的设定

   * 网络结构搭建
   * 进入聊天室
   * 聊天
   * 退出聊天室功能
   * 管理员消息

   封装结构: 函数

   请求协议：  L  name
             C  text...
             Q  name

   响应协议： OK   FAIL

4. 逐个功能分析，罗列逻辑流程

   * 网络结构搭建
     udp网络

   * 进入聊天室
     客户端： 输入姓名
             发送登录请求
             得到登录结果

     服务端： 接收请求
             判断用户是否可以登录
             向客户端回复结果
             如果该客户端登录了则告知其他人

   * 聊天
     客户端： 创建新的进程
             一个进程循环的接收消息
             一个进程循环输入内容发送

     服务端： 接收消息 C name xxxxx
             转发给其他人 "name: xxxxxx"

   * 退出聊天室功能
     客户端  quit  ctrl-c 退出
            发送请求给服务端
            结束进程

     服务端  接收请求
            删除该用户
            告知其他人

   * 管理员消息

